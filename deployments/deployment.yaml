apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-killer
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-killer
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-killer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-killer
subjects:
  - kind: ServiceAccount
    name: pod-killer
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-killer
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod-killer
  template:
    metadata:
      labels:
        app: pod-killer
    spec:
      serviceAccountName: pod-killer
      containers:
        - name: pod-killer
          image: pod-killer:dev
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi
          ports:
            - containerPort: 8080
              name: http
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10